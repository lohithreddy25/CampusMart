{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lohit\\\\OneDrive\\\\Desktop\\\\campuscart\\\\full_stack_project\\\\fe\\\\src\\\\pages\\\\ResetPassword.js\";\nimport React, { useState } from 'react';\nimport './ResetPassword.css';\nfunction ResetPassword() {\n  const [form, setForm] = useState({\n    identifier: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setMessage('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      identifier,\n      newPassword,\n      confirmPassword\n    } = form;\n    if (!identifier) {\n      setMessage('Please enter your registered email or mobile number');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setMessage(\"Passwords don't match\");\n      return;\n    }\n    if (newPassword.length < 8) {\n      setMessage(\"Password should be at least 8 characters\");\n      return;\n    }\n    setMessage(\"✅ Password reset successfully!\");\n    // Send to backend later...\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"reset-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"identifier\",\n    placeholder: \"Email or Mobile\",\n    value: form.identifier,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"newPassword\",\n    placeholder: \"New Password\",\n    value: form.newPassword,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    value: form.confirmPassword,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, message), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Reset Password\")));\n}\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","ResetPassword","form","setForm","identifier","newPassword","confirmPassword","message","setMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required"],"sources":["C:/Users/lohit/OneDrive/Desktop/campuscart/full_stack_project/fe/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ResetPassword.css';\r\n\r\nfunction ResetPassword() {\r\n  const [form, setForm] = useState({\r\n    identifier: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    setMessage('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { identifier, newPassword, confirmPassword } = form;\r\n\r\n    if (!identifier) {\r\n      setMessage('Please enter your registered email or mobile number');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage(\"Passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 8) {\r\n      setMessage(\"Password should be at least 8 characters\");\r\n      return;\r\n    }\r\n\r\n    setMessage(\"✅ Password reset successfully!\");\r\n    // Send to backend later...\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-bg\">\r\n      <form className=\"reset-form\" onSubmit={handleSubmit}>\r\n        <h2>Reset Password</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"identifier\"\r\n          placeholder=\"Email or Mobile\"\r\n          value={form.identifier}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          placeholder=\"New Password\"\r\n          value={form.newPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm Password\"\r\n          value={form.confirmPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        {message && <p className=\"message\">{message}</p>}\r\n\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}